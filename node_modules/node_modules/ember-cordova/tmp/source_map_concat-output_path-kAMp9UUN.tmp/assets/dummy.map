{"version":3,"sources":["vendor/ember-cli/app-prefix.js","dummy/app.js","dummy/components/app-version.js","dummy/controllers/array.js","dummy/controllers/object.js","dummy/ember-cordova/tests/modules/ember-cordova/index.jshint.js","dummy/ember-cordova/tests/modules/ember-cordova/mixins/device/splashscreen.jshint.js","dummy/ember-cordova/tests/modules/ember-cordova/mixins/events.jshint.js","dummy/ember-cordova/tests/modules/ember-cordova/models/ffdc.jshint.js","dummy/ember-cordova/tests/modules/ember-cordova/routes/ffdc.jshint.js","dummy/ember-cordova/tests/modules/ember-cordova/services/cordova.jshint.js","dummy/ember-cordova/tests/modules/ember-cordova/services/device/platform.jshint.js","dummy/ember-cordova/tests/modules/ember-cordova/services/device/splashscreen.jshint.js","dummy/ember-cordova/tests/modules/ember-cordova/utils/subscribe.jshint.js","dummy/initializers/app-version.js","dummy/initializers/container-debug-adapter.js","dummy/initializers/export-application-global.js","dummy/instance-initializers/in-app-livereload.js","dummy/resolver.js","dummy/router.js","dummy/services/ajax.js","dummy/services/cordova.js","dummy/services/device/platform.js","dummy/services/device/splashscreen.js","dummy/templates/application.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n/* jshint ignore:start */\n\n\n\n/* jshint ignore:end */\n","define('dummy/app', ['exports', 'ember', 'dummy/resolver', 'ember-load-initializers', 'dummy/config/environment'], function (exports, _ember, _dummyResolver, _emberLoadInitializers, _dummyConfigEnvironment) {\n\n  var App = undefined;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix,\n    Resolver: _dummyResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _dummyConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('dummy/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'dummy/config/environment'], function (exports, _emberCliAppVersionComponentsAppVersion, _dummyConfigEnvironment) {\n\n  var name = _dummyConfigEnvironment['default'].APP.name;\n  var version = _dummyConfigEnvironment['default'].APP.version;\n\n  exports['default'] = _emberCliAppVersionComponentsAppVersion['default'].extend({\n    version: version,\n    name: name\n  });\n});","define('dummy/controllers/array', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller;\n});","define('dummy/controllers/object', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller;\n});","define('dummy/ember-cordova/tests/modules/ember-cordova/index.jshint', ['exports'], function (exports) {\n  QUnit.module('JSHint - modules/ember-cordova/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/ember-cordova/index.js should pass jshint.');\n  });\n});","define('dummy/ember-cordova/tests/modules/ember-cordova/mixins/device/splashscreen.jshint', ['exports'], function (exports) {\n  QUnit.module('JSHint - modules/ember-cordova/mixins/device/splashscreen.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/ember-cordova/mixins/device/splashscreen.js should pass jshint.');\n  });\n});","define('dummy/ember-cordova/tests/modules/ember-cordova/mixins/events.jshint', ['exports'], function (exports) {\n  QUnit.module('JSHint - modules/ember-cordova/mixins/events.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/ember-cordova/mixins/events.js should pass jshint.');\n  });\n});","define('dummy/ember-cordova/tests/modules/ember-cordova/models/ffdc.jshint', ['exports'], function (exports) {\n  QUnit.module('JSHint - modules/ember-cordova/models/ffdc.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/ember-cordova/models/ffdc.js should pass jshint.');\n  });\n});","define('dummy/ember-cordova/tests/modules/ember-cordova/routes/ffdc.jshint', ['exports'], function (exports) {\n  QUnit.module('JSHint - modules/ember-cordova/routes/ffdc.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/ember-cordova/routes/ffdc.js should pass jshint.');\n  });\n});","define('dummy/ember-cordova/tests/modules/ember-cordova/services/cordova.jshint', ['exports'], function (exports) {\n  QUnit.module('JSHint - modules/ember-cordova/services/cordova.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/ember-cordova/services/cordova.js should pass jshint.');\n  });\n});","define('dummy/ember-cordova/tests/modules/ember-cordova/services/device/platform.jshint', ['exports'], function (exports) {\n  QUnit.module('JSHint - modules/ember-cordova/services/device/platform.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'modules/ember-cordova/services/device/platform.js should pass jshint.\\nmodules/ember-cordova/services/device/platform.js: line 149, col 6, Unnecessary semicolon.\\nmodules/ember-cordova/services/device/platform.js: line 10, col 3, \\'Service\\' is defined but never used.\\n\\n2 errors');\n  });\n});","define('dummy/ember-cordova/tests/modules/ember-cordova/services/device/splashscreen.jshint', ['exports'], function (exports) {\n  QUnit.module('JSHint - modules/ember-cordova/services/device/splashscreen.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/ember-cordova/services/device/splashscreen.js should pass jshint.');\n  });\n});","define('dummy/ember-cordova/tests/modules/ember-cordova/utils/subscribe.jshint', ['exports'], function (exports) {\n  QUnit.module('JSHint - modules/ember-cordova/utils/subscribe.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'modules/ember-cordova/utils/subscribe.js should pass jshint.');\n  });\n});","define('dummy/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'dummy/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _dummyConfigEnvironment) {\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(_dummyConfigEnvironment['default'].APP.name, _dummyConfigEnvironment['default'].APP.version)\n  };\n});","define('dummy/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {\n  exports['default'] = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, _ember, _dummyConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_dummyConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var value = _dummyConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_dummyConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('dummy/instance-initializers/in-app-livereload', ['exports', 'ember'], function (exports, _ember) {\n  exports.initialize = initialize;\n  var run = _ember['default'].run;\n\n  function initialize(app) {\n    var config = undefined,\n        env = undefined;\n\n    if (app.resolveRegistration) {\n      config = app.resolveRegistration('config:environment');\n    } else {\n      config = app.container.lookupFactory('config:environment');\n    }\n    env = config.environment;\n\n    if (config.cordova && config.cordova.reloadUrl && (env === 'development' || env === 'test')) {\n      (function () {\n\n        var url = config.cordova.reloadUrl;\n        if (window.location.href.indexOf('file://') > -1) {\n          run.later(function () {\n            window.location.replace(url);\n          }, 50);\n        }\n      })();\n    }\n  }\n\n  exports['default'] = {\n    name: 'cordova:in-app-livereload',\n    initialize: initialize\n  };\n});","define('dummy/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  exports['default'] = _emberResolver['default'];\n});","define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, _ember, _dummyConfigEnvironment) {\n\n  var Router = _ember['default'].Router.extend({\n    location: _dummyConfigEnvironment['default'].locationType\n  });\n\n  Router.map(function () {});\n\n  exports['default'] = Router;\n});","define('dummy/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberAjaxServicesAjax['default'];\n    }\n  });\n});","define('dummy/services/cordova', ['exports', 'ember-cordova/services/cordova'], function (exports, _emberCordovaServicesCordova) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberCordovaServicesCordova['default'];\n    }\n  });\n});","define('dummy/services/device/platform', ['exports', 'ember-cordova/services/device/platform'], function (exports, _emberCordovaServicesDevicePlatform) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberCordovaServicesDevicePlatform['default'];\n    }\n  });\n});","define('dummy/services/device/splashscreen', ['exports', 'ember-cordova/services/device/splashscreen'], function (exports, _emberCordovaServicesDeviceSplashscreen) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberCordovaServicesDeviceSplashscreen['default'];\n    }\n  });\n});","define(\"dummy/templates/application\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\"multiple-nodes\", \"wrong-type\"]\n        },\n        \"revision\": \"Ember@2.3.2\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 4,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/application.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        dom.setAttribute(el1, \"id\", \"title\");\n        var el2 = dom.createTextNode(\"Welcome to Ember\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 2, 2, contextualElement);\n        return morphs;\n      },\n      statements: [[\"content\", \"outlet\", [\"loc\", [null, [3, 0], [3, 10]]]]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","/* jshint ignore:start */\n\n\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\nif (!runningTests) {\n  require(\"dummy/app\")[\"default\"].create({\"name\":\"ember-cordova\",\"version\":\"0.1.05+5335e52a\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"dummy.js"}